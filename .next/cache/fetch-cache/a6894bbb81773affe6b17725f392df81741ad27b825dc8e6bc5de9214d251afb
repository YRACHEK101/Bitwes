{"kind":"FETCH","data":{"headers":{"accept-ranges":"bytes","access-control-allow-origin":"*","cache-control":"max-age=300","connection":"keep-alive","content-encoding":"gzip","content-length":"2319","content-security-policy":"default-src 'none'; style-src 'unsafe-inline'; sandbox","content-type":"text/plain; charset=utf-8","cross-origin-resource-policy":"cross-origin","date":"Sat, 01 Mar 2025 07:37:17 GMT","etag":"W/\"7b275b37c417e05a3da5be9b1e2bafd262a65fde75be912182930786bb4a23be\"","expires":"Sat, 01 Mar 2025 07:42:17 GMT","source-age":"0","strict-transport-security":"max-age=31536000","vary":"Authorization,Accept-Encoding,Origin","via":"1.1 varnish","x-cache":"MISS","x-cache-hits":"0","x-content-type-options":"nosniff","x-fastly-request-id":"5c5ba3fc23dd2763111a754d7e6dc3a37cb59330","x-frame-options":"deny","x-github-request-id":"C30A:1EE2FA:B2E648:CE3DF1:67C2B92B","x-served-by":"cache-mad22043-MAD","x-timer":"S1740814637.255580,VS0,VE192","x-xss-protection":"1; mode=block"},"body":"","status":200,"url":"https://raw.githubusercontent.com/asbhogal/Fyrre-Magazine/main/json/podcasts.json"},"revalidate":31536000,"tags":[]}